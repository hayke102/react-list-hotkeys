{"version":3,"sources":["../../src/index.tsx","App.tsx","index.tsx"],"names":["DEFAULT_OPTIONS","keys","up","down","select","INITIAL_TODOS","text","done","App","useState","todos","setTodos","options","selectedIndex","setSelectedIndex","useHotkeys","Math","data","onSelect","item","index","useListHotkeys","console","log","newTodos","newItem","toggleTodo","map","todo","key","className","type","checked","readOnly","ReactDOM","render","document","getElementById"],"mappings":"+bAgBA,IAAMA,EAA2B,CAC/BC,KAAM,CACJC,GADI,UAEJC,KAFI,YAGJC,OAAQ,UCfNC,G,MAAgB,CACpB,CAAEC,KAAM,2BAAkBC,MAAM,GAChC,CAAED,KAAM,uCAA8BC,MAAM,GAC5C,CAAED,KAAM,6BAAoBC,MAAM,GAClC,CAAED,KAAM,gCAAuBC,MAAM,GACrC,CAAED,KAAM,yBAAqBC,MAAM,GACnC,CAAED,KAAM,8BAAqBC,MAAM,KAuCtBC,EApCH,WAAO,IAAD,EACUC,mBAASJ,GADnB,mBACTK,EADS,KACFC,EADE,ODUY,gBAK5B,IAAMC,EAAU,EAAH,KAAb,G,EAC0CH,mBAAS,GAA5CI,OAAeC,OA0BtB,OAxBAC,YAAWH,OAAD,MAAsB,Y,MAIF,GAH5B,GACEE,EAAiBE,UAAS,OAAAC,QAAI,IAAJA,OAAA,EAAAA,EAAA,QAATD,EAA2BH,EAA5CC,IAEF,UAAIF,EAAJ,qBAAIA,EAAJ,UACE,UAAAA,EAAA,oCAIJG,YAAWH,OAAD,IAAoB,YAClB,MAEkB,EAF5B,IACEE,EAAiBE,WAAYH,EAA7BC,IACA,UAAIF,EAAJ,qBAAIA,EAAJ,OACE,UAAAA,EAAA,mCAKNG,YAAWH,OAAD,QAAwB,YAChC,GACEM,EAAS,CAAEC,KAAMF,EAAR,GAA6BG,MAAOP,OAI1C,CAACA,EAAR,GC/B0CQ,CACxCX,GACA,YAAsB,IAAnBS,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACPE,QAAQC,IAAR,wBAA6BJ,EAA7B,kBAA2CC,IAX5B,SAACA,GAClB,IAAMI,EAAQ,YAAOd,GACfe,EAAO,eAAQD,EAASJ,IAC9BK,EAAQlB,MAAQkB,EAAQlB,KACxBiB,EAASJ,GAASK,EAClBd,EAASa,GAOPE,CAAWN,MAfC,mBAWTP,EAXS,UAmBhB,OACE,6BACE,wCACA,4BACGH,EAAMiB,KAAI,SAACC,EAAMR,GAAP,OACT,wBAAIS,IAAKT,GACP,0BAAMU,UAAWV,IAAUP,EAAgB,WAAa,IACtD,2BAAOkB,KAAK,WAAWC,QAASJ,EAAKrB,KAAM0B,UAAQ,IAClDL,EAAKtB,aCnCpB4B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.82b29811.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { Dispatch, DispatchWithoutAction, useState } from \"react\";\nimport useHotkeys from \"@reecelucas/react-use-hotkeys\";\n\nexport type Options = Partial<{\n  keys: Partial<{\n    up: string;\n    down: string;\n    select: string;\n  }>;\n  events: Partial<{\n    onDown: DispatchWithoutAction;\n    onUp: DispatchWithoutAction;\n  }>;\n}>;\n\nconst DEFAULT_OPTIONS: Options = {\n  keys: {\n    up: \"ArrowUp\",\n    down: \"ArrowDown\",\n    select: \"Enter\"\n  }\n};\n\nexport const useListHotkeys = <T,>(\n  data: Array<T> | null,\n  onSelect: Dispatch<{ item: T; index: number }>,\n  optionsOverride?: Options\n) => {\n  const options = { ...DEFAULT_OPTIONS, ...optionsOverride };\n  const [selectedIndex, setSelectedIndex] = useState(0);\n\n  useHotkeys(options.keys!.down!, (e) => {\n    if (data) {\n      setSelectedIndex(Math.min(data?.length - 1, selectedIndex + 1));\n    }\n    if (options.events?.onDown) {\n      options.events?.onDown();\n    }\n  });\n\n  useHotkeys(options.keys!.up!, (e) => {\n    if (data) {\n      setSelectedIndex(Math.max(0, selectedIndex - 1));\n      if (options.events?.onUp) {\n        options.events?.onUp();\n      }\n    }\n  });\n\n  useHotkeys(options.keys!.select!, (e) => {\n    if (data) {\n      onSelect({ item: data[selectedIndex], index: selectedIndex });\n    }\n  });\n\n  return [selectedIndex, setSelectedIndex];\n};\n","import React, { useState } from \"react\";\n\nimport { useListHotkeys } from \"react-list-hotkeys\";\nimport \"react-list-hotkeys/dist/index.css\";\n\nconst INITIAL_TODOS = [\n  { text: \"Go shopping 🛒\", done: false },\n  { text: \"Make an awesome library 📚\", done: true },\n  { text: \"Go on holiday 🌏\", done: false },\n  { text: \"Break the market 💰\", done: false },\n  { text: \"Write some code ✍\", done: false },\n  { text: \"Build a rocket 🚀\", done: false }\n];\n\nconst App = () => {\n  const [todos, setTodos] = useState(INITIAL_TODOS);\n\n  const toggleTodo = (index: number) => {\n    const newTodos = [...todos];\n    const newItem = { ...newTodos[index] };\n    newItem.done = !newItem.done;\n    newTodos[index] = newItem;\n    setTodos(newTodos);\n  };\n\n  const [selectedIndex, setSelectedIndex] = useListHotkeys(\n    todos,\n    ({ item, index }) => {\n      console.log(`selected item:${item} index:${index}`);\n      toggleTodo(index);\n    }\n  );\n\n  return (\n    <div>\n      <h3>My Todos</h3>\n      <ol>\n        {todos.map((todo, index) => (\n          <li key={index}>\n            <span className={index === selectedIndex ? \"selected\" : \"\"}>\n              <input type=\"checkbox\" checked={todo.done} readOnly />\n              {todo.text}\n            </span>\n          </li>\n        ))}\n      </ol>\n    </div>\n  );\n};\n\nexport default App;\n","import \"./index.css\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}